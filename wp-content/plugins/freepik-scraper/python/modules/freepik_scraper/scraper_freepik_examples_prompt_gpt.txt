
Мені потрібно написати скрипт для Python для копіювання всіх зображення з сторінки колекції на Freepik з наступними умовами:
1. Використовувати драйвер Selenium з Firefox
2. Колекція може бути розділена на декілька сторінок. Навігаційна кнопка "Next Page" знаходиться в блоці з класом ".pagination__button". Скрипт повинен перевірити чи є наступна сторінка і копіювати їх також
3. ID колекції можна отримати з URL сторінки колекції. Вона знаходиться після останнього "/". Для прикладу якщо URL колекції "https://www.freepik.com/collection/psd-white-unbranded-smartphone-template-with-customizable-design-for-ui-ux-product-showcase-3d/4747261" то її ID буде "4747261". Отриманий ID зберегти в об'єкт даних колекції в поле "collection_id". URL колекції зберегти в об'єкт даних колекції в поле "collection_url"
4. Назву колекції потрібно знайти на сторінці в тегові "H1" з класом "collection__title" і зберегти в об'єкт даних колекції в поле "collection_title"
5. Опис колекції знаходиться в елементі "p" з класом "collection__description-text". Отриманий опис зберегти в об'єкт даних колекції "collection_description". Кількість зображень колекції можна знайти в блоці з класом ".collection__totalr", отриману строку очистити від всіх букв та символів і залити тільки ціле число, отримане число записати в поле "collection_size" об'єкта даних колекції.
6. Галерея мініатюр зображень знаходяться в блоці з класом ".list-content"
7.  Кожне зображення знаходиться в окремому елементі "figure" і має клас "showcase__item". З цього елементу мені потрібно зберегти данні з атрибута "data-title" і записати їх разом з посиланням на зображення середньої якості отримане з атрибуту "data-image" в загальний об'єкт даних колекції у поля "image_title" там "image_link" відповідно
8. З отриманого посилання на зображення потрібно спробувати отримати зображення в найкращій якості. Для цього потрібно спробувати почергово додати запит до посилання. В порядку зменшення, спочатку "?w=2000", потім "?w=1800", потім "?w=1480" і потім "?w=1380". Для прикладу якщо отримали посилання на зображення  "https://img.freepik.com/premium-psd/unbranded-smartphone-template-with-customizable-design-uiux-product-showcase-3d-render_433979-3204.jpg" потрібно спробувати чи доступне зображення за адресою "https://img.freepik.com/premium-psd/unbranded-smartphone-template-with-customizable-design-uiux-product-showcase-3d-render_433979-3204.jpg?w=2000", потім "https://img.freepik.com/premium-psd/unbranded-smartphone-template-with-customizable-design-uiux-product-showcase-3d-render_433979-3204.jpg?w=1800" і так далі. Перше доступне посилання з найбільшим розміром зберегти в об'єкт даних колекції для цього зображення у поле "image_hd" і завантажити його в папку "data\images" посилання на локально завантажений файл зберегти в поле "image_hd_local". Якщо зображення з додатковими запитами не доступні - зберегти в поле "image_hd" оригінальне посилання на зображення, завантажити його і також записати посилання на локально завантажений файл в "image_hd_local"
9. В середині елемента "figure" знайти тег "a". Наступні атрибути зберегти в об'єкт даних колекції до цього зображення: атрибут "href" цього тегу зберегти в поле "link_to_image_page", атрибут "data-id" зберегти як "image_id"
10. В дочірньому елементі "img" з класом ".landscape" зберегти атрибут "alt" зберегти в об'єкт даних в поле "image_alt"
11. Додати в об'єкт даних колекції дату та час створення об'єкту
12. Після отримання інформації з усіх зображень колекції зберегти об'єкт даних колекції в JSON файл в папку "data\json"
Всі коментарі до функцій пиши англійською мовою

Наведи мені приклад необхідних python скриптів. Розбий будь ласка свою відповідь на повідомлення максимум по 3900 символів. Якщо відповідь буде довша за 3900 символів - розбий її на кілька повідомлень, напиши у відповідь перше повідомлення і напишеш наступне коли я напишу слово "продовжуй далі"

=================

Будь ласка напиши Python скрипт для копіювання з галереї колекцій посилання на колекцію з додатковою інформацією з наступними умовами:
1. Використовувати драйвер Selenium з Firefox
2. Відкривати сторінку з галереєю колекцій "https://www.freepik.com/author/dmitryakreev/collections"
3. Галерея колекцій може бути розділена на декілька сторінок. Кнопка переходу до наступної сторінки має клас ".pagination__next". Скрипт повинен перевірити чи є наступна сторінка і копіювати посилання на колекції з неї також
4. Шукати в блоці ".collections" елемент "article.collection__item" - це буде блок колекції. ID колекції можна отримати з атрибуту "data-id" цього елемента. Отриманий ID зберегти в об'єкт даних колекції collection_data в поле "collection_id".
5. Кількість елементів в колекції можна знайти в дочірньому елементі "span" з класом ".count". Отриману строку очистити від всіх букв та символів і залити тільки ціле число, отримане число записати в поле "collection_size" об'єкта даних колекції.
6. В папці ".\data\json" спробувати знайти файл з іменем collection_id + ".json" і якщо він існує знайти в ньому значення "collection_size", порівняти з отриманим в попередньому кроці значенням "collection_size" і якщо вони будуть однакові або значення з ".json" файлу буде більшим - перейти до наступного елементу галереї колекцій, а наступні кроки не виконувати.
7. URL колекції знаходиться в атрибуті "data-share-url". Його потрібно зберегти в об'єкт даних колекції в поле "collection_url"
8. Змінити у всіх елементів ".collection__link" і елементів ".image-wrapper" стиль border-radius на нуль. Зробити скріншот елементу ".image-wrapper" і зберегти файл скріншоту в папку яка складається з строки ".\data\images\" + collection_id у файл з назвою що складається з collection_id і строки "-preview" + розширення файлу. Посилання на локально збережений файл зберегти в поле "collection_preview" в об'єкт даних колекції
9. Викликати з модуля scraper.py функцію save_to_json(data, file_name) і з наступними атрибутами save_to_json(collection_data, f"{collection_data['collection_id']}.json")
10. Викликати з модуля scraper.py функцію get_collection_data(collection_url) яка у разі успішного виконання поверне оновлений об'єкт collection_data. У разі відсутності у оновленому об'єкті collection_data елементів "collection_id", "collection_size", "collection_preview" - оновити їх з данних отриманих у попередніх кроках.
11. Знову викликати з модуля scraper.py функцію save_to_json(data, file_name) і з наступними атрибутами save_to_json(collection_data, f"{collection_data['collection_id']}.json")
12. Кожен крок виконання виводити  консоль користувача з коротким описом кроку (коментарем) для зручності слідкування над ходом виконання скрипта.
13. Всі коментарі до функцій пиши англійською мовою
